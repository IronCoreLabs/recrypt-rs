language: rust
rust:
  - 1.32.0
# hopefully prevent the cache from becoming huge - https://levans.fr/rust_travis_cache.html
cache:
  directories:
    - /home/travis/.cargo
before_cache:
  - rm -rf /home/travis/.cargo/registry
branches:
  only:
    - master
before_script:
  - rustup component add rustfmt-preview
  - cross --version || cargo install cross
matrix:
  include:
    # Linux
    - name: "Travis Default Environment"
      os: linux
      env:
        - TEST=1
    - name: "Alpine Linux x86_64"
      os: linux
      env:
        - TARGET=x86_64-unknown-linux-musl
        - TEST=0
    # OSX
    - name: "OSX x86_64"
      os: osx
      env:
        - TARGET=x86_64-apple-darwin
        - TEST=1
    # iOS
    - name: "iOS x64"
      os: "osx"
      env:
        - TARGET=aarch64-apple-ios
        - TEST=0
        - IOS=1
    - name: "iOS ARM7"
      os: "osx"
      env:
        - TARGET=armv7-apple-ios
        - IOS=1
    # Android
    - name: "Android x64"
      os: linux
      env:
        - TARGET=aarch64-linux-android
        - TEST=0
    - name: "Android ARM7"
      os: linux
      env:
        - TARGET=armv7-linux-androideabi
        - TEST=0
script:
  - |
    # If not target specified, run a normal cargo build and format check
    if [ -z "${TARGET}" ]; then
      cargo build --verbose
      cargo fmt -- --check
    # Cross doesn't have support for ios targets, so manually add/build them with cargo
    elif [ $IOS = 1 ]; then
      rustup target add $TARGET
      cargo build --target $TARGET
    # Otherwise use cross to build for the specified argument
    else
      cross build --target $TARGET
    fi
  - |
    # Only run unit tests if architecture specifies that we should
    if [ $TEST = 1 ]; then
      if [ -z "${TARGET}" ]; then
        cargo test --verbose
      else
        cross test --target $TARGET
      fi
    fi
after_success:
  - |
    # Only run our benchmarks once, we don't need them for every target
    if [ -z "${TARGET}" ]; then
      ./.travis_scripts/cmp-bench.sh
    fi
