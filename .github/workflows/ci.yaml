on:
  push:
    branches:
      - master
  pull_request:

name: CI

jobs:
  # Abort if the code isn't formatted according to rustfmt standards from nightly.
  fmt:
    name: Rustfmt
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      # Work around https://github.com/actions/cache/issues/133#issuecomment-599102035
      - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
        name: Fix perms on .cargo so we can restore the cache.
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo/
          key: ${{ github.job }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.2

  # Build on all the architectures we intend to support, including cross compiled ones.
  build:
    name: Builds
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-18.04
            target: aarch64-linux-android # Android x64
          - os: ubuntu-18.04
            target: x86_64-unknown-linux-musl # Alpine Linux x86_64
          - os: ubuntu-18.04
            target: wasm32-unknown-unknown
          - os: macos-10.15
            target: aarch64-apple-ios
          - os: macos-10.15
            target: x86_64-apple-darwin # 64-bit OSX
          - os: windows-2019
            target: x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v2
      # Work around https://github.com/actions/cache/issues/133#issuecomment-599102035
      - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
        name: Fix perms on .cargo so we can restore the cache.
        if: "!contains(runner.os, 'windows')"
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo/
          key: ${{ github.job }}-${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ github.job }}-${{ runner.os }}-${{ matrix.target }}-target-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

  # Run the tests on only one architecture, against various Rust versions.
  test:
    name: Test Suite
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - 1.41.1 #MSRV
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      # Work around https://github.com/actions/cache/issues/133#issuecomment-599102035
      - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
        name: Fix perms on .cargo so we can restore the cache.
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo/
          key: ${{ github.job }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}-${{ matrix.rust }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ github.job }}-${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}-${{ matrix.rust }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test

  # Benchmark current and base revisions, if this is a PR.
  bench:
    name: Bench
    runs-on: ubuntu-18.04
    if: github.base_ref != ''
    strategy:
      matrix:
        include:
          - name: current
            ref: ${{ github.ref }}
          - name: base
            ref: ${{ github.base_ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ matrix.ref }}
      # Work around https://github.com/actions/cache/issues/133#issuecomment-599102035
      - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
        name: Fix perms on .cargo so we can restore the cache.
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo/
          key: ${{ github.job }}-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ github.job }}-${{ runner.os }}-target-${{ hashFiles('**/Cargo.toml') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: critcmp
      - uses: actions-rs/cargo@v1
        with:
          command: bench
          args: -- --save-baseline ${{ matrix.name }}
      - run: critcmp --export ${{ matrix.name }} > results.json
      - name: Store benchmark results
        uses: actions/upload-artifact@v1
        with:
          name: bench-${{ matrix.name }}
          path: results.json

  # Add a comment to the PR with benchmark results. Only if everything else passed, and this is a PR.
  bench_results:
    needs:
      - bench
    name: Upload benchmark results
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      # Work around https://github.com/actions/cache/issues/133#issuecomment-599102035
      - run: sudo chown -R $(whoami):$(id -ng) ~/.cargo/
        name: Fix perms on .cargo so we can restore the cache.
      - name: Cache cargo
        uses: actions/cache@v1
        with:
          path: ~/.cargo/
          key: ${{ github.job }}
      - name: Retrieve benchmark results
        uses: actions/download-artifact@v1
        with:
          name: bench-current
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: bench-current
          failOnError: false
      - name: Retrieve benchmark results
        uses: actions/download-artifact@v1
        with:
          name: bench-base
      - name: Delete artifact
        uses: geekyeggo/delete-artifact@v1
        with:
          name: bench-base
          failOnError: false
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: critcmp
      - name: Compare benchmarks
        run: |
          if ! critcmp bench-base/results.json bench-current/results.json -t 10 ; then
            echo "# Benchmark blew big budget! Bad!" > comment.md
          fi
          echo "Benchmark results comparing with base:" >> comment.md
          echo '```' >> comment.md
          critcmp bench-base/results.json bench-current/results.json -t 2 >> comment.md || true
          echo '```' >> comment.md
          cat comment.md
          mv comment.md .github/workflows/comment.md
      # This will post a comment to the PR with benchmark results, but it's disabled because it's annoying.
      # - uses: harupy/comment-on-pr@c0522c4
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     filename: comment.md
